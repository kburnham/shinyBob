)
# put your AWS credentials here. I think we can write this to .Rprofile so you donâ€™t
# need to specify it everytime you start a new R session, but we can just do this
# for now. The run_script will source this script so that these options will
# get written into the environment.
Sys.setenv('AWS_ACCESS_KEY_ID' = 'AKIAI32DBB4EO6VYKGJQ',
'AWS_SECRET_ACCESS_KEY' = 'lQEHeS88SFb2+s0qxzua16BaezrxP0yAQn9hqYCP',
'AWS_DEFAULT_REGION' = 'us-west-1')
# put your github access token here. This is for installing PilytixPackage
Sys.setenv('GITHUB_PAT' = '23b5fcf36f4a4c785d7414165202abbc176e0eae')
}
Sys.getenv()
Sys.setenv('AWS_ACCESS_KEY_ID' = 'AKIAI32DBB4EO6VYKGJQ',
'AWS_SECRET_ACCESS_KEY' = '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',
'AWS_DEFAULT_REGION' = 'us-west-1')
Sys.getenv()
library(googleway)
df <- google_distance(origins = target_zips[1:20],
destinations = arena_zip,
key = "")
i
library(Foundation)
cd
devtools::build("Foundation/")
library(Foundation)
cd
devtools::document("Foundation/")
devtools::build("Foundation/")
library(Foundation)
library(lubridate)
cd
opp <- read_csv("/Users/kb/PredictiveModels/client_data/Lions_Data_06_06_2017.csv")
opp %>% categorize_date(CreatedOn, output_function  = "weekyear")
test <- opp %>% sample_n(20) %>% transmute(date = CreatedOn)
class(test %>% cd(date, output_function  = "day"))
test %>% cd(date, output_function  = "day")
test %>% categorize_date(date, output_function  = "day")
test %>% categorize_date_("date", output_function  = "day")
test %>% categorize_date_("date", output_function  = "month")
test %>% cd(date, output_function  = "month")
test %>% cd(date, output_function  = "year")
test %>% .$date
test %>% cd(date, output_function  = "year")
test <- opp %>% sample_n(10) %>% transmute(date = CreatedOn)
test %>% .$date
library(slackr)
for (func in c("month", "year", "week", "day", "wday", "monyear", "weekyear")) {
slackr(test %>% cd(date, output_function = func))
}
options()$java_parameters
p <- options()
p$java.parameters
names(p)
library(dplyr.snowflakedb)
options$java.parameters
options()$java.parameters
options(java.parameters = "-Xmx1024m")
library("RJDBC")
options(dplyr.jdbc.classpath = "/Users/kb/snowflake-jdbc-3.0.9.jar")
my_db <- src_snowflakedb(user = "kburnham",
password = "Gy6Zq3dGnir4",
account = "pilytix",
opts = list(
#warehouse = "mywh",
db = "PX_LIONS",
schema = "STAGE"))
lions_contact <- collect(tbl(my_db, "STAGE_CONTACT_HISTORICAL"))
library(tidyverse)
lions_contact <- collect(tbl(my_db, "STAGE_CONTACT_HISTORICAL"))
lion <- tbl(my_db, "STAGE_OPPORTUNITY_CURRENT")
lion <- tbl(my_db, "STAGE_OPPORTUNITY_HISTORICAL")
names(lion)
options(java.parameters)
options()$java.parameters
options()$java.parameters
options(java.parameters = "-Xmx1024m")
library(dplyr.snowflakedb)
library("RJDBC")
my_db <- src_snowflakedb(user = "kburnham",
password = "Gy6Zq3dGnir4",
account = "pilytix",
opts = list(
#warehouse = "mywh",
db = "PX_LIONS",
schema = "STAGE"))
options(dplyr.jdbc.classpath = "/Users/kb/snowflake-jdbc-3.0.9.jar")
my_db <- src_snowflakedb(user = "kburnham",
password = "Gy6Zq3dGnir4",
account = "pilytix",
opts = list(
#warehouse = "mywh",
db = "PX_LIONS",
schema = "STAGE"))
lions_contact <- collect(tbl(my_db, "STAGE_CONTACT_HISTORICAL"))
library(tidyverse)
lion <- tbl(my_db, "STAGE_OPPORTUNITY_HISTORICAL")
lions_contact <- collect(tbl(my_db, "STAGE_CONTACT_HISTORICAL"))
library(tidyverse)
options(java.parameters = "-Xmx2048m")
library(dplyr.snowflakedb)
library("RJDBC")
my_db <- src_snowflakedb(user = "kburnham",
password = "Gy6Zq3dGnir4",
account = "pilytix",
opts = list(
#warehouse = "mywh",
db = "PX_LIONS",
schema = "STAGE"))
options(dplyr.jdbc.classpath = "/Users/kb/snowflake-jdbc-3.0.9.jar")
my_db <- src_snowflakedb(user = "kburnham",
password = "Gy6Zq3dGnir4",
account = "pilytix",
opts = list(
#warehouse = "mywh",
db = "PX_LIONS",
schema = "STAGE"))
lions_contact <- collect(tbl(my_db, "STAGE_CONTACT_HISTORICAL"))
getOption("max.print")
?collect
lions_contact <- collect(tbl(my_db, "STAGE_CONTACT_HISTORICAL"), n = Inf)
install.packages("scrapeR")
library(scrapeR)
p <- scrape("file:///Users/kb/Documents/MOOCs/BobDylanProject/lyrics_files/absolutely-sweet-marie.html")
p
str(p)
p$file
names(p$file)
str(p$file)
install.packages("rvest")
library(rverst)
p <- html("file:///Users/kb/Documents/MOOCs/BobDylanProject/lyrics_files/absolutely-sweet-marie.html")
library(rvest)
p <- html("file:///Users/kb/Documents/MOOCs/BobDylanProject/lyrics_files/absolutely-sweet-marie.html")
p <- read_html("file:///Users/kb/Documents/MOOCs/BobDylanProject/lyrics_files/absolutely-sweet-marie.html")
p <- read_html("/Users/kb/Documents/MOOCs/BobDylanProject/lyrics_files/absolutely-sweet-marie.html")
p
names(p)
p$doc
print(p$doc)
p %>% html_nodes()
p %>% html_nodes("")
html_tag(p)
html_name(p)
html_text(p)
vignette("selectorgadget")
p
html_name(p)
html_text(p)
p <- xml::read_html("/Users/kb/Documents/MOOCs/BobDylanProject/lyrics_files/absolutely-sweet-marie.html")
p <- xml2::read_html("/Users/kb/Documents/MOOCs/BobDylanProject/lyrics_files/absolutely-sweet-marie.html")
names(p)
as_list(p)
q <- as_list(p)
names(q)
q$head
names(q$head)
names(q$body)
p <- rvest::read_html("/Users/kb/Documents/MOOCs/BobDylanProject/lyrics_files/absolutely-sweet-marie.html")
p <- rvest::html("/Users/kb/Documents/MOOCs/BobDylanProject/lyrics_files/absolutely-sweet-marie.html")
p <- rvest::read_html("/Users/kb/Documents/MOOCs/BobDylanProject/lyrics_files/absolutely-sweet-marie.html")
help("Deprecated")
p <- rvest::html_text("/Users/kb/Documents/MOOCs/BobDylanProject/lyrics_files/absolutely-sweet-marie.html")
p <- rvest::html_text("/Users/kb/Documents/MOOCs/BobDylanProject/lyrics_files/absolutely-sweet-marie.html")
p <-html_text("/Users/kb/Documents/MOOCs/BobDylanProject/lyrics_files/absolutely-sweet-marie.html")
p <- html_text("/Users/kb/Documents/MOOCs/BobDylanProject/lyrics_files/absolutely-sweet-marie.html")
p <- xml2::read_html("/Users/kb/Documents/MOOCs/BobDylanProject/lyrics_files/absolutely-sweet-marie.html")
str(p)
demo(package = "rvest")
demo(package = "rvest", topic = "united")
demo(package = "rvest", topic = "zillow")
p %>% html_nodes(".")
library(rjson)
bd <- fromJSON("/Users/kb/Documents/MOOCs/BobDylanProject/lyrics_files/output.json")
bd <- fromJSON("/Users/kb/Documents/MOOCs/BobDylanProject/lyrics_files/output.json", unexpected.escape = "keep")
bd <- fromJSON("/Users/kb/Documents/MOOCs/BobDylanProject/lyrics_files/output.json", unexpected.escape = "ignore")
bd <- fromJSON("/Users/kb/Documents/MOOCs/BobDylanProject/lyrics_files/output.json")
bd <- fromJSON("/Users/kb/Documents/MOOCs/BobDylanProject/lyrics_files/output.json")
bd <- fromJSON("/Users/kb/Documents/MOOCs/BobDylanProject/lyrics_files/output.json")
bd <- fromJSON(paste(readLines(
"/Users/kb/Documents/MOOCs/BobDylanProject/lyrics_files/output.json")))
infile <- "/Users/kb/Documents/MOOCs/BobDylanProject/lyrics_files/output.json"
bd <- fromJSON(paste(readLines(
infile)))
q <- readLines(infile)
q <- readLines(infile)
q <- readLines(infile)
bd <- fromJSON(paste(readLines(infile)))
q
fromJSON(1)
fromJSON(q)
q <- paste(readLines(infile))
fromJSON(q)
q <- paste(readLines(infile), collapse = "")
fromJSON(q)
lyr <- fromJSON(q)
names(lyr)
lyr[[1]]
alb <- fromJSON(paste(readLines(album_file), collapse = ""))
album_file <- "/Users/kb/Documents/MOOCs/BobDylanProject/album_files/albums.json"
alb <- fromJSON(paste(readLines(album_file), collapse = ""))
alb <- fromJSON(paste(readLines(album_file), collapse = ""))
alb
con <- fromJSON(paste(readLines(concerts_file), collapse = ""))
concerts_file <- "/Users/kb/Documents/MOOCs/BobDylanProject/set_lists2/concerts.json"
con <- fromJSON(paste(readLines(concerts_file), collapse = ""))
con
lyr[[1]]
lyr[[5]]
lyr[[15]]
lyr[[20]]
lyr[[25]]
lyr[[30]]
lyr[[35:40]]
lyr[[40]]
con[[1]]
alb[[1]]
album_df <- data.frame()
album_df <- data.frame()
for (album in alb) {
temp <- data.frame(Album = album$Album, Year = album$Year, Songs = album$Songs, Position = seq(length(album(songs))))
album_df <- rbind(album_df, temp)
}
album_df <- data.frame()
for (album in alb) {
temp <- data.frame(Album = album$Album, Year = album$Year, Songs = album$Songs, Position = seq(length(album$songs)))
album_df <- rbind(album_df, temp)
}
album_df <- data.frame()
for (album in alb) {
temp <- data.frame(Album = album$Album, Year = album$Year, Songs = album$Songs, Position = seq(length(album$songs)))
print(nrow(temp))
album_df <- rbind(album_df, temp)
}
album = alb[[1]]
album
temp <- data.frame(Album = album$Album, Year = album$Year, Songs = album$Songs, Position = seq(length(album$songs)))
data.frame(Album = album$Album)
data.frame(Album = album$Album, Year = album$Year)
data.frame(Album = album$Album, Year = album$Year, Song = album$Songs)
data.frame(Album = album$Album, Year = album$Year, Song = album$Songs, Position = seq(length(album$Songs)))
album_df <- data.frame()
for (album in alb) {
temp <- data.frame(Album = album$Album, Year = album$Year, Song = album$Songs, Position = seq(length(album$Songs)))
album_df <- rbind(album_df, temp)
}
album_df
View(album_df)
outdir <- "/Users/kb/Documents/MOOCs/BobDylanProject/"
outdir <- "/Users/kb/Documents/MOOCs/BobDylanProject"
saveRDS(album_df, file.path(outdir, "bod_dylan_albums.rds"))
View(album_df)
con
con[[1]]
concert_df <- data.frame()
for (c in con) {
temp <- data.frame(Date = c$Date, Venue = c$Venue, Location = c$Location, Songs = c$Songs,
Position = seq(length(c$Songs)))
concert_df <- rbind(concert_df, temp)
}
for (concert in con) {
temp <- data.frame(Date = concert$Date, Venue = concert$Venue, Location = concert$Location, Songs = concert$Songs,
Position = seq(length(concert$Songs)))
concert_df <- rbind(concert_df, temp)
}
concert
alb[[1]]$Songs
alb[[1]]$Songs %>% class
concert_df <- data.frame()
for (concert in con) {
temp <- data.frame(Date = concert$Date, Venue = concert$Venue, Location = concert$Location, Songs = unlist(concert$Songs),
Position = seq(length(concert$Songs)))
concert_df <- rbind(concert_df, temp)
}
concert
concert_df <- data.frame()
for (concert in con) {
concert$Songs <- unlist(concert$Songs)
temp <- data.frame(Date = concert$Date,
Venue = concert$Venue,
Location = concert$Location,
Songs = concert$Songs,
Position = seq(length(concert$Songs)))
concert_df <- rbind(concert_df, temp)
}
concert_df <- data.frame()
for (concert in con) {
concert$Songs <- unlist(concert$Songs)
if (length(concert$Songs) == 0) next
temp <- data.frame(Date = concert$Date,
Venue = concert$Venue,
Location = concert$Location,
Songs = concert$Songs,
Position = seq(length(concert$Songs)))
concert_df <- rbind(concert_df, temp)
}
View(concert_df)
concert_df <- data.frame()
for (concert in con) {
concert$Songs <- unlist(concert$Songs)
if (length(concert$Songs) == 0) concert$Songs <- ""
temp <- data.frame(Date = concert$Date,
Venue = concert$Venue,
Location = concert$Location,
Songs = concert$Songs,
Position = seq(length(concert$Songs)))
concert_df <- rbind(concert_df, temp)
}
concert
concert_df <- data.frame()
for (concert in con) {
concert$Songs <- unlist(concert$Songs)
if (length(concert$Songs) == 0) concert$Songs <- ""
if (is.null(concert$Location)) concert$Location <- ""
temp <- data.frame(Date = concert$Date,
Venue = concert$Venue,
Location = concert$Location,
Songs = concert$Songs,
Position = seq(length(concert$Songs)))
concert_df <- rbind(concert_df, temp)
}
View(concert_df)
concert_df <- concert_df %>% separate(Location, into = c("City", "State/Country"), sep = ",")
View(concert_df)
concert_df <- data.frame()
for (concert in con) {
concert$Songs <- unlist(concert$Songs)
if (length(concert$Songs) == 0) concert$Songs <- ""
if (is.null(concert$Location)) concert$Location <- ""
temp <- data.frame(Date = concert$Date,
Venue = concert$Venue,
Location = concert$Location,
Songs = concert$Songs,
Position = seq(length(concert$Songs)))
concert_df <- rbind(concert_df, temp)
}
concert_df <- concert_df %>%
mutate(OriginalLocation = Location)
separate(Location, into = c("City", "State/Country"), sep = ",")
library(tidyverse)
concert_df <- concert_df %>%
mutate(OriginalLocation = Location)
separate(Location, into = c("City", "State/Country"), sep = ",")
concert_df <- concert_df %>%
mutate(OriginalLocation = Location) %>%
separate(Location, into = c("City", "State/Country"), sep = ",")
sum(is.na(concert_df$`State/Country`))
View(concert_df %>% filter(is.na(`State/Country`)))
concert_df[concert_df$Location == "Portland"]
concert_df[concert_df$OriginalLocation == "Portland"]
concert_df$OriginalLocation
concert_df[concert_df$OriginalLocation == "Portland", ]
concert_df$`State/Country`[concert_df$OriginalLocation == "Portland", ] <- "OR"
concert_df$`State/Country`[concert_df$OriginalLocation == "Portland"] <- "OR"
concert_df$`State/Country`[concert_df$OriginalLocation == "Ann Arbor"]
concert_df$`State/Country`[concert_df$OriginalLocation == "Ann Arbor"] <- "MI"
concert_df$`State/Country`[concert_df$OriginalLocation == "Dolina Charlotty"]
concert_df$`State/Country`[concert_df$OriginalLocation == "Dolinie Charlotty"]
"s\322upsk"
concert_df$City[concert_df$OriginalLocation == "Dolinie Charlotty"] <- "slupsk"
concert_df <- data.frame()
for (concert in con) {
concert$Songs <- unlist(concert$Songs)
if (length(concert$Songs) == 0) concert$Songs <- ""
if (is.null(concert$Location)) concert$Location <- ""
temp <- data.frame(Date = concert$Date,
Venue = concert$Venue,
Location = concert$Location,
Songs = concert$Songs,
Position = seq(length(concert$Songs)))
concert_df <- rbind(concert_df, temp)
}
concert_df <- concert_df %>%
mutate(OriginalLocation = Location) %>%
separate(Location, into = c("City", "State/Country"), sep = ",")
concert_df$`State/Country`[concert_df$OriginalLocation == "Portland"] <- "OR"
concert_df$`State/Country`[concert_df$OriginalLocation == "Ann Arbor"] <- "MI"
concert_df$`State/Country`[concert_df$OriginalLocation == "Dolinie Charlotty"] <- "Poland"
concert_df$City[concert_df$OriginalLocation == "Dolinie Charlotty"] <- "slupsk"
View(concert_df[c(7394, 7395, 4974, 4975)])
View(concert_df[c(7394, 7395, 4974, 4975), ])
View(concert_df[c(7394, 7395, 49794, 49795), ])
sum(concert_df$`State/Country` == "Kent")
sum(concert_df$`State/Country` == "Kent", na.rm = T)
concert_df %>% filter(`State/Country` == "Kent")
concert_df %>% filter(`State/Country` == "Kent ")
concert_df %>% filter(City == "Tonbridge")
concert_df %>% filter(City == "Tonbridge") %>% View()
in <- read_csv("/Users/kb/Downloads/opens-65695 (1).csv")
input <- read_csv("/Users/kb/Downloads/opens-65695 (1).csv")
input
input %>% group_by(email) %>% summarize(count = n()) %>%
input %>% group_by(email) %>% summarize(count = n()) %>% arrange(desc(count))
input %>% group_by(email) %>% summarize(count = n()) %>% arrange(desc(count))
counts <- input %>% group_by(email) %>% summarize(count = n()) %>% arrange(desc(count))
output <- input %>% left_join(counts, by = email)
output <- input %>% left_join(counts, by = "email")
output
output <- input %>% select(-count) %>% left_join(counts, by = "email")
output
source('~/.active-rstudio-document', echo=TRUE)
output <- input %>% select(-count) %>% left_join(counts, by = "email") %>% arrange(desc(count)) %>%
select(subscriberid, emaio, fname, lname, fullname, count)
output <- input %>% select(-count) %>% left_join(counts, by = "email") %>% arrange(desc(count)) %>%
select(subscriberid, email, fname, lname, fullname, count)
output
output <- input %>% select(-count) %>% left_join(counts, by = "email") %>% arrange(desc(count)) %>%
filter(!duplicated(email)) %>%
select(subscriberid, email, fname, lname, fullname, count)
output
write_csv(output, "/Users/kb/Documents/counts-65696.csv")
View(concert_df)
concert_df %>% filter(`State/Country` == "Kent")
concert_df %>% filter(City == "Tonbridge")
concert_df$`State/Country`[concert_df$City == "Tonbridge"]
concert_df$`State/Country`[concert_df$City == "Tonbridge"] <- "England"
View(concert_df)
lyr[[1]]
song_list <- list()
for (lyrics in lyr) {
song_list[[lyrics$Song]] <- lyrics$Lyrics
}
names(song_list)
songs_df <- as.date.frame(song_list)
songs_df <- as.data.frame(song_list)
library(purrr)
map(song_list, "Lyrics")
words <- map(song_list, "Lyrics")
words
lyrics$Lyrics
song_list[[45]]
song_list[[50]]
words
words[!is.null(words)]
words[[4]]
words[4]
words <- map(song_list, Lyrics)
song_list[[4]]
words <- unlist(song_list)
words
song_list %>% unname
songs_df <- data.frame(Song = names(song_list), Lyrics = unname(song_list))
songs_df <- data.frame(Song = names(song_list))
songs_df$Lyrics <- unname(song_list)
View(songs_df)
songs_df$Lyrics_vec <- unname(song_list)
songs_df$Lyrics_all <- paste(songs_df$Lyrics_vec, sep = "'")
View(songs_df)
songs_df$Lyrics_all[4]
songs_df$Lyrics_vec[4]
songs_df$Lyrics_all <- NULL
songs_df$Lyrics_vec <- NULL
songs_df$Lyrics[4]
songs_df$SongId <- seq(nrow(songs_df))
songs_df %>% select(SongId, Song, Lyrics)
songs_df %>% songs_df %>% select(SongId, Song, Lyrics)
songs_df <-  songs_df %>% select(SongId, Song, Lyrics)
View(songs_df)
outdir
saveRDS(songs_df, file.path(outdir, "bob_dylan_lyrics.rds"))
saveRDS(concert_df, file.path(outdir, "bob_dylan_concerts.rds"))
shiny::runApp('Documents/MOOCs/BobDylanProject/BobDylan')
lyrics <- readRDS("/Users/kb/Documents/MOOCs/BobDylanProject/bob_dylan_lyrics.rds")
runApp('Documents/MOOCs/BobDylanProject/BobDylan')
lyrics %>% filter(Song == "All Along the WatchTower") %>% .$Lyrics %>% paste(collapse = "")
lyrics %>% filter(Song == "All Along The WatchTower") %>% .$Lyrics %>% paste(collapse = "")
lyrics %>% filter(Song == "All Along The Watchtower") %>% .$Lyrics %>% paste(collapse = "")
lyrics %>% filter(Song == "All Along The Watchtower") %>% .$Lyrics
lyrics %>% filter(Song == "All Along The Watchtower") %>% .$Lyrics %>% unlist()
runApp('Documents/MOOCs/BobDylanProject/BobDylan')
lyrics %>% filter(Song == "Masters Of War") %>% .$Lyrics %>% unlist()
runApp('Documents/MOOCs/BobDylanProject/BobDylan')
lyrics %>% filter(Song == "Masters Of War") %>% .$Lyrics %>% unlist()
runApp('Documents/MOOCs/BobDylanProject/BobDylan')
runApp('Documents/MOOCs/BobDylanProject/BobDylan')
lyrics %>% filter(Song == "Masters Of War") %>% .$Lyrics %>% unlist()
runApp('Documents/MOOCs/BobDylanProject/BobDylan')
lyrics %>% filter(Song == "Masters Of War") %>% .$Lyrics %>% unlist() %>% paste(collapse = "<br/>") %>% HTML()
runApp('Documents/MOOCs/BobDylanProject/BobDylan')
?unlist
runApp('Documents/MOOCs/BobDylanProject/BobDylan')
install.packages('rsconnect')
library(rsconnect)
rsconnect::deployApp('/Users/kb/Documents/MOOCs/BobDylanProject/BobDylan/app.R')
rsconnect::deployApp('/Users/kb/Documents/MOOCs/BobDylanProject/BobDylan/')
runApp('Documents/MOOCs/BobDylanProject/BobDylan')
getwd()
setwd("/Users/kb/Documents/MOOCs/BobDylanProject/BobDylan/")
lyrics <- readRDS("bob_dylan_lyrics.rds")
runApp()
rsconnect::deployApp('/Users/kb/Documents/MOOCs/BobDylanProject/BobDylan/')
rsconnect::setAccountInfo(name='kburnham',
token='1FAB8DC1F601E550BC16C71B0B7C5CAF',
secret='/UEStPR8kJTYbp1SpdfsqNBcJrLE2xM+u8Jn7+gR')
library(rsconnect)
rsconnect::deployApp('/Users/kb/Documents/MOOCs/BobDylanProject/BobDylan/')
albums <- readRDS("bob_dylan_albums.rds")
runApp()
albums <- readRDS("bob_dylan_albums.rds")
getwd()
lyrics <- readRDS("bob_dylan_lyrics.rds")
list.files()
runApp()
runApp()
concerts <- readRDS("bob_dylan_concerts.rds")
concerts$Date <- as.Date(concerts$Date)
concerts$Date
runApp()
runApp()
kd <- read_csv("/Users/kb/Downloads/Survey.csv")
View(kd)
rsconnect::deployApp('/Users/kb/Documents/MOOCs/BobDylanProject/BobDylan/')
source('~/.active-rstudio-document')
